import java.util.HashMap;
import java.util.Map;

class TwoSum_1 {

    public int[] twoSumViolence(int[] nums, int target) {
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j < nums.length; j++) {
                if ((nums[i] + nums[j]) == target && i != j) {
                    return new int[]{i, j};
                }
            }

        }
        throw new IllegalArgumentException("No two sum solution");

    }


    public int[] twoSumHashMap(int[] nums, int target) {
        Map<Integer, Integer> map = buildMapByNums(nums);


        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            if (map.containsKey(complement) && map.get(complement) != i) {
                return new int[]{i, map.get(complement)};
            }
        }


        throw new IllegalArgumentException("No two sum solution");
    }


    private Map<Integer, Integer> buildMapByNums(int[] nums) {
        Map<Integer, Integer> map = new HashMap();
        for (int i = 0; i < nums.length; i++) {
            map.put(nums[i], i);
        }
        return map;
    }


}
